@startuml
page 2x2
skinparam pageMargin 10
skinparam pageExternalColor gray
skinparam pageBorderColor black
skinparam groupInheritance 2



namespace datasource {
}

namespace models {
    class Dropset {
    --
    + enabled: Boolean,
    + first: Int,
    + second: Int,
    + third: Int
    --
    }

    class Exercise {
    --
    + id: Int = 0,
    + name: String = "",
    + numberOfSets: Int = 0,
    + numberOfRepetitions: Int = 0,
    + weightInKilos: Float = 0F,
    + image: String = "",
    + dropset: Int = 0
    --
    }
}


namespace ui.screens.exercises {
    entity ExercisesListScreen {
    --
    ExercisesListScreen(
    navController: NavHostController,
    exerciseViewModel: ExerciseViewModel = viewModel())
    --
    }

   class ExerciseViewModel {
   + LiveData<List<Exercise>> allData
   - ExercisesRepository repository
   + LiveData<Exercise> getExercise(Int)
   + void addExercise(Exercise)
   + void deleteExercise(Exercise)
   + void updateExercise(Exercise)
   }

   class ExerciseViewModelFactory {
   + void T create(modelClass: Class<T>)
   }

   class ExercisesListContent {
   + navController: NavHostController,
   + exercisesList: List<Exercise>,
   + onDelete: (Exercise) -> Unit = {},
   }
}

namespace ui.screens.exercises.components {
    class ExerciseCard {
       modifier: Modifier,
        exercise: Exercise,
        editAction: (Exercise),
        deleteAction: (Exercise),
        showAction: Boolean,
        imageWidth: Dp,
        imageHeight: Dp ,
        containerColor: Color,
        contentColor: Color
    }
    class RemoveExerciseFromListDialog {
        name: String = "",
        onDeleteConfirm: () -> Unit,
        onDeleteCancel: () -> Unit,
        modifier: Modifier = Modifier
    }
}


'each screen uses components in ui
ui.navigation.NavigationGraph ..> ui.screens.exercises.ExercisesListScreen
ui.navigation.NavigationGraph ..> ui.screens.exercises.ExerciseViewModel
ui.navigation.NavigationGraph ..> ui.screens.exercises.ExerciseViewModelFactory

ui.screens.exercises.ExercisesListContent ..> models.Exercise
ui.screens.exercises.components.ExerciseCard ..> models.Exercise
models.Exercise ..> models.Dropset

ui.screens.exercises.ExercisesListScreen ..> ui.screens.exercises.ExerciseViewModel

ui.screens.exercises.ExerciseViewModel ..> datasource
note top of datasource: See the Database diagrams section

ui.screens.exercises.ExercisesListContent ..> ui.screens.exercises.components.ExerciseCard
ui.screens.exercises.ExercisesListContent ..> ui.screens.exercises.components.RemoveExerciseFromListDialog
ui.screens.exercises.ExercisesListScreen ..> ui.screens.exercises.ExercisesListContent

'asdasd

@enduml